# -*- coding: utf-8 -*-
"""Loan Status Prediction using Machine Learning with Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11GansDJbDOvn0f4Ra-2mfkmKWnbgzdWW
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

loan_dataset = pd.read_csv('train.csv')

type(loan_dataset)

X = loan_dataset.iloc[:, :-1].values
y = loan_dataset.iloc[:, -1].values

loan_dataset.head()

loan_dataset.shape

loan_dataset.describe()

loan_dataset.isnull().sum()

loan_dataset = loan_dataset.dropna()

loan_dataset.isnull().sum()

loan_dataset.replace({"Loan_Status":{'N':0,'Y':1}},inplace=True)

loan_dataset.head()

loan_dataset['Dependents'].value_counts()

loan_dataset = loan_dataset.replace(to_replace='3+',value=4 )

loan_dataset['Dependents'].value_counts()

sns.countplot(x='Education',hue='Loan_Status',data=loan_dataset)

sns.countplot(x='Married',hue='Loan_Status',data=loan_dataset)

loan_dataset.replace({'Married':{'No':0,'Yes':1},'Gender':{'Male':1,'Female':0},'Self_Employed':{'No':0,'Yes':1},
                      'Property_Area':{'Rural':0,'Semiurban':1,'Urban':2},'Education':{'Graduate':1,'Not Graduate':0}},inplace=True)

loan_dataset.head()

X= loan_dataset.drop(columns=['Loan_ID','Loan_Status'],axis=1)
y= loan_dataset['Loan_Status']

print(X)

print(y)

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.1,stratify=y, random_state=7)

print(X.shape, X_train.shape, X_test.shape)

from sklearn.svm import SVC
classifier = SVC(kernel='linear')

classifier.fit(X_train, y_train)

X_train_prediction = classifier.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, y_train)

training_data_accuracy

X_test_prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, y_test)

test_data_accuracy

print("Gender	Married	Dependents	Education	Self_Employed	ApplicantIncome	CoapplicantIncome	LoanAmount	Loan_Amount_Term	Credit_History Property_Area")
print(classifier.predict([[1,1,1,1,0,2789,1920,150,360,1,2]]))